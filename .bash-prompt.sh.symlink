#  Customize BASH PS1 prompt to show current GIT repository and branch.

# Regular Colors
BLACK=$(tput setaf 0)        # Black
RED=$(tput setaf 1)          # Red
GREEN=$(tput setaf 2)        # Green
YELLOW=$(tput setaf 3)       # Yellow
BLUE=$(tput setaf 4)         # Blue
MAGENTA=$(tput setaf 5)       # Purple
CYAN=$(tput setaf 6)         # Cyan
WHITE=$(tput setaf 7)        # White
LBLUE=$(tput setaf 12)       # Light Blue
NRED=$(tput setaf 9)         # 'New' Red
BrYELLOW=$(tput setaf 11)     # Bright Yellow
BrGREEN=$(tput setaf 10)     # Bright Green
ORANGE=$(tput setaf 202)

# Bold
BOLD=$(tput bold)

# Underline
UNDERLINE=$(tput smul)

# All attributes off (Reset)
NORMAL=$(tput sgr0)

# Background
BBLACK=$(tput setab 0)        # Black
BRED=$(tput setab 1)          # Red
BGREEN=$(tput setab 2)        # Green
BYELLOW=$(tput setab 3)       # Yellow
BBLUE=$(tput setab 4)         # Blue
BMAGENTA=$(tput setab 5)       # Purple
BCYAN=$(tput setab 6)         # Cyan
BWHITE=$(tput setab 7)        # White

# Various variables you might want for your PS1 prompt instead
Time12h="\T"
Time12a="\@"
PathShort="\W"
PathFull="\w"
NewLine="\n"
Jobs="\j"

__short_pwd()
{
    MYPATH=$(~/.short_pwd.py "$PWD" 40)
    printf $MYPATH
}

__jobs_count()
{
    job_count=$(jobs -s | wc -l)
    if [ $job_count -ne 0 ]; then
        printf "[%s] " $job_count
    fi
}

__hostname()
{
    if [ $HOSTNAME != "of2-dev-l006" ]; then
        printf "@$HOSTNAME";
    fi
}

__newline()
{
    cols=$(tput cols)
    if [ $cols -lt 80 ]; then
        printf ' \n '
    fi
}

export PS1='\[${RED}\]$(__jobs_count)\[${NORMAL}\]\
\u\[${BLUE}\]$(__hostname)\[${NORMAL}\]:\
$(
if [ $(__git_ps1)x != "x" ]; then
	# Working directory is part of a git repo
	printf "\[${BOLD}\]\[${YELLOW}\]$(__short_pwd)$(
	echo `git status` | egrep "nothing( added)* to commit" > /dev/null 2>&1;
	if [ "$?" -eq "0" ]; then
		# No changes to working tree
		printf "\[${GREEN}\]$(__git_ps1 "(%s)")";
	else
		# Changes to working tree
		printf "\[${RED}\]$(__git_ps1 "{%s}")";
	fi
	)\[${NORMAL}\] ";
else
	# Not in git repo
	printf "\[${YELLOW}\]$(__short_pwd)\[${NORMAL}\] ";
fi
)$(__newline)\$ '
