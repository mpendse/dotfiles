# Personal bash aliases
alias cdrepo='cd /sandbox/mihir.pendse/repos'
alias cd2='cd ../..'
alias cd3='cd ../../..'
alias lsd='ls -d */'
alias tmux='tmux -2'
alias :q=quit_vim_style
alias ack='ack-grep'
alias soa='source activate'
alias sod='source deactivate'
alias rm='rm -I'
alias gvims='\gvim --servername GVIM'
alias gvimr='\gvim --remote'
alias gvim='nohup gvim > /dev/null 2>&1'
alias retag='ctags -R --exclude=build --exclude=.git --exclude=log --exclude=.swp *'
# Here lies horrible quoting
alias rescope='find $PWD -name '\''build'\'' -prune -o -name '\''.git'\'' -prune -o -name '\''bin'\'' -prune -o -name '\''*.cpp'\'' -print -o -name '\''*.h'\'' -print -o -name '\''*.c'\'' -print -o -name '\''*.cxx'\'' -print -o -name '\''*.hxx'\'' -print > cscope.files && cscope -b'
alias die=try_die_try_again
alias lock='gnome-screensaver-command -l'
alias puptime='ps -o pid,comm,lstart,etime,time,args --pid'
alias open='gnome-open'

git-remote-merged ()
{
    for branch in `git branch -r --merged | grep -v HEAD`; do echo -e `git show --format="%ci %cr %an" $branch | head -n 1` \\t$branch; done | sort -r
}

git-remote-not-merged ()
{
    for branch in `git branch -r --no-merged | grep -v HEAD`; do echo -e `git show --format="%ci %cr %an" $branch | head -n 1` \\t$branch; done | sort -r
}

git-both-merged () 
{
    for branch in `comm -12  <(git branch --merged|awk '{print($1)}' | sort) <(git branch -r --merged|awk '{print($1)}'|awk -F \/ '{print($2)}' | sort)`;do echo -e `git show --format="%ci %cr %an" $branch | head -n 1` \\t$branch; done | sort -r
}

git-both-not-merged ()
{
    for branch in `comm -12  <(git branch --no-merged|awk '{print($1)}' | sort) <(git branch -r --no-merged|awk '{print($1)}'|awk -F \/ '{print($2)}' | sort)`; do echo -e `git show --format="%ci %cr %an" $branch | head -n 1` \\t$branch; done | sort -r
}

# vi mode
# set -o vi

# History options
# Append to history
shopt -s histappend
HISTCONTROL=ignoredups
HISTFILESIZE=1000
HISTSIZE=1000
HISTIGNORE='ls*:bg:fg:history:ll:pwd:exit:clear'
# Store history immediately
export PROMPT_COMMAND="${PROMPT_COMMAND} history -a;"

# git and coloured prompt
source ~/.git-prompt.sh
source ~/.bash-prompt.sh

quit_vim_style () 
{
    while true; do
        read -p "Not in Vim; Still quit (y/n)? " yn
        case $yn in
            [Yy]* ) exit;;
            [Nn]* ) break;;
            * ) break;;
        esac
    done
}

try_die_try_again ()
{
    kill $1
    sleep 2
    jobs=$(ps --pid $1 | wc -l)
    if [ $jobs -eq 2 ]; then
        kill -9 $1
    fi
}

set_window_title() 
{
    echo -ne "\e]2;$*\a"
}
